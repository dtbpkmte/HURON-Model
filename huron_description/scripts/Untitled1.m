clear all ; close all; clc
% syms s Q  a c k   z p   R u SO f G  t x theta1 theta1 theta2 theta2 theta3 theta3 l1 l2 l3 m1 m2 m3 lc1 lc2 lc3 'real'
syms s Q  a c k   z p   R u SO f G  x theta1  theta2  theta3 theta1_dot theta2_dot theta3_dot  l1 l2 l3 m1 m2 m3 lc1 lc2 lc3 'real'
assumeAlso(m1>0 & m2>0 & m3>0 & l1>0 & l2>0 & l3>0 & lc1>0 & lc2>0 & lc3>0)
% %% case when abs(s)>=1
% f=c*(1-exp(-k*(abs(s))));
% % B=a*sign(abs(s)-1);
% assume(f<1 | f>0);
% assumeAlso(a<1 | a>0);
% expr1 = (  1/(  -Q*(abs(s))*(2) * sign(s)    ) - f );
% % symvar(expr1,1);
% % F1 = integral(expr1,s,1,0)
% F1=int(expr1,s)
% 
% Time=  (  ( subs (F1, s, 1) )  - simplify ( subs (F1, s, 0.5 ) ) )
% 
% Time_reach =-subs(Time , [G , Q  , c , k ,f  ] , [ 2  , 1  , 55 , 0.001 , 0.5] ) 
% 
%  
% % reaching_time = simplify(  subs(F1,s,0) - subs(F1,s,SO) ) % reaching time with symbolic parameters
% % pretty(reaching_time)
% % reaching_time = subs(reaching_time ,[ Q ,z , f ,a ] ,[ 1 , 1 , 0.5 , 0.1])    % reaching time with numerical parameter values
%  
% %% end of integration part
% 
% % from Variable parameter paper
% 
% sdot=-1*(abs(s))^(s*atan(pi*s/2)) * sign(s) ;
% int( (1/sdot) ,s)
% % end of variable parameter paper
%  %% Plot of the S_dot trajectory VS s Trajectory
%  s=-100:0.1:100;
%  c=55; k=0.0002; p=1 ; a=0.01 ; z=1;     Q=1; G=2; w=2;
%  f=c*(1-exp(-k*((s)).^p));
%  B=a*sign(abs(s)-1);
% %  s_dot=(  -Q*(abs(s)).^(f) .* sign(s) - z* (abs(s)).^(a) .* s  );
%  s_dot=  (  (  -Q.*(abs(s)).*(w) .* sign(s)    ) - f );
%  plot(s,s_dot)
%  xlabel('s')
%  ylabel('s dot')
%  %% end of plot of the S trajectory VS s trajectory
%  


%% plot f(x)
% x=-100:0.1:100;
% f= -0.01.*(abs(x).^4).*sign(x)- 0.001.*(abs(x).^4).*sign(x) -10.*10^0.001 .*sign(x);
% plot(x,f)

T1= [ cos(theta1)  -sin(theta1)*cos(0)  sin(theta1)*sin(0)  l1*cos(theta1) ;  sin(theta1) cos(theta1)*cos(0) -cos(theta1)*sin(0) l1*sin(theta1) ; 0 sin(0) cos(0) 0 ; 0 0 0 1];
T2= [ cos(theta2)  -sin(theta2)*cos(0)  sin(theta2)*sin(0)  l2*cos(theta2) ;  sin(theta2) cos(theta2)*cos(0) -cos(theta2)*sin(0) l2*sin(theta2) ; 0 sin(0) cos(0) 0 ; 0 0 0 1];
T3= [ cos(theta3)  -sin(theta3)*cos(0)  sin(theta3)*sin(0)  l3*cos(theta3) ;  sin(theta3) cos(theta3)*cos(0) -cos(theta3)*sin(0) l3*sin(theta3) ; 0 sin(0) cos(0) 0 ; 0 0 0 1];

T = simplify(T1*T2*T3)
T_0_2 = simplify(T1*T2)

p_0_ee = T(1:3, 4);
p_0_com = [ ...
    ( (lc1*cos(theta1))*m1 + (l1*cos(theta1)+lc2*cos(theta1+theta2))*m2 + (l1*cos(theta1)+l2*cos(theta1+theta2)+lc3*cos(theta1+theta2+theta3))*m3  ) / (m1+m2+m3); ...
    -1*((lc1*sin(theta1))*m1 + (l1*sin(theta1)+lc2*sin(theta1+theta2))*m2 + (l1*sin(theta1)+l2*sin(theta1+theta2)+lc3*sin(theta1+theta2+theta3))*m3) / (m1+m2+m3); ...
    0];
p_0_com_ee = p_0_ee - p_0_com

p_0_2 = T_0_2(1:3, 4);
p_0_2_ee = p_0_ee - p_0_2

theta_com = simplify(pi - acos((p_0_com_ee'*p_0_2_ee)/(norm(p_0_com_ee)*norm(p_0_2_ee))));
% theta_com_test = subs(theta_com, [theta1 theta2 theta3], [0 0 0])
% 
lcom = norm(p_0_com_ee);

Tcom= [ cos(theta_com)  -sin(theta_com)*cos(0)  sin(theta_com)*sin(0)  lcom*cos(theta_com) ;  ...
        sin(theta_com) cos(theta_com)*cos(0) -cos(theta_com)*sin(0) lcom*sin(theta_com) ; ...
        0 sin(0) cos(0) 0 ; ...
        0 0 0 1];
T_0_com = T*Tcom
R_0_com = simplify(T(1:3, 1:3) * Tcom(1:3, 1:3))
% R_0_com = [...
%     - sin(theta1 + theta2 + theta3)*(1 - (l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3))^2)/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (cos(theta1 + theta2 + theta3)*(l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2),   (sin(theta1 + theta2 + theta3)*(l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - cos(theta1 + theta2 + theta3)*(1 - ((l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3))^2)/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2))^(1/2), 0; ...
%    cos(theta1 + theta2 + theta3)*(1 - (l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3))^2)/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (sin(theta1 + theta2 + theta3)*(l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2), - sin(theta1 + theta2 + theta3)*(1 - ((l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3))^2)/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2))^(1/2) - (cos(theta1 + theta2 + theta3)*(l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2), 0; ...
%     0, 0, 1]
%  
% R_0_com_dot = diff(R_0_com, t)
% R_0_com_dot = [ ...
%     (sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot)*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (cos(theta1 + theta2 + theta3)*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (sin(theta1 + theta2 + theta3)*((l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2 - 1)*(2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))))/(2*((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(3/2)) + (cos(theta1 + theta2 + theta3)*((l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2 - 1)*(theta1_dot + theta2_dot + theta3_dot))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) + (cos(theta1 + theta2 + theta3)*(2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2)))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/(2*((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(3/2)) + (2*sin(theta1 + theta2 + theta3)*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2), (sin(theta1 + theta2 + theta3)*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) + (cos(theta1 + theta2 + theta3)*((2*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2) - ((2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2)))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2)/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^2))/(2*(1 - (l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2))^(1/2)) + sin(theta1 + theta2 + theta3)*(1 - (l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2))^(1/2)*(theta1_dot + theta2_dot + theta3_dot) + (cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot)*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (sin(theta1 + theta2 + theta3)*(2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2)))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/(2*((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(3/2)), 0; ...
%  (cos(theta1 + theta2 + theta3)*((l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2 - 1)*(2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))))/(2*((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(3/2)) - (cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot)*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (sin(theta1 + theta2 + theta3)*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) + (sin(theta1 + theta2 + theta3)*((l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2 - 1)*(theta1_dot + theta2_dot + theta3_dot))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (2*cos(theta1 + theta2 + theta3)*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) + (sin(theta1 + theta2 + theta3)*(2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2)))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/(2*((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(3/2)), (sin(theta1 + theta2 + theta3)*((2*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2) - ((2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2)))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2)/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^2))/(2*(1 - (l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2))^(1/2)) - cos(theta1 + theta2 + theta3)*(1 - (l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3))^2/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2))^(1/2)*(theta1_dot + theta2_dot + theta3_dot) - (cos(theta1 + theta2 + theta3)*(l2*m3*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + lc2*m2*sin(2*theta1 + 2*theta2 + theta3)*(2*theta1_dot + 2*theta2_dot + theta3_dot) + l1*m2*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + l1*m3*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) + lc1*m1*sin(2*theta1 + theta2 + theta3)*(2*theta1_dot + theta2_dot + theta3_dot) - l1*m1*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m2*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l1*m3*sin(theta2 + theta3)*(theta2_dot + theta3_dot) - l2*m1*theta3_dot*sin(theta3) - l2*m2*theta3_dot*sin(theta3) - l2*m3*theta3_dot*sin(theta3) + lc3*m3*sin(2*theta1 + 2*theta2 + 2*theta3)*(2*theta1_dot + 2*theta2_dot + 2*theta3_dot)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) + (sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot)*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) + (cos(theta1 + theta2 + theta3)*(2*(l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))*(l2*m1*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + 2*l2*m3*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + lc2*m2*cos(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + lc3*m3*cos(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*cos(theta1) + 2*l1*m2*theta1_dot*cos(theta1) + 2*l1*m3*theta1_dot*cos(theta1) + lc1*m1*theta1_dot*cos(theta1)) - 2*(l2*m1*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) - lc2*m2*sin(theta1 + theta2)*(theta1_dot + theta2_dot) + l3*m1*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m2*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) - lc3*m3*sin(theta1 + theta2 + theta3)*(theta1_dot + theta2_dot + theta3_dot) + l1*m1*theta1_dot*sin(theta1) - lc1*m1*theta1_dot*sin(theta1))*(l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2)))*(l3*m1 + l3*m2 + l3*m3 - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3)))/(2*((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(3/2)), 0; ...
%                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       0, 0];
%  S = R_0_com_dot * R_0_com'
% omega_z = -S(1, 2)
% J = omega_z
% R_0_com_f = subs(R_0_com, [theta1 theta2 theta3], [theta1 theta2 theta3])

theta_com_base = simplify(atan2(-R_0_com(1,2), R_0_com(1,1)))
% theta_com_base = atan2(cos(theta1 + theta2 + theta3)*(1 - (l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3))^2/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2))^(1/2) - (sin(theta1 + theta2 + theta3)*(l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2), (sin(theta1 + theta2 + theta3)*((l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3))^2 - 1))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2) - (cos(theta1 + theta2 + theta3)*(l3*m1 + l3*m2 + l3*m3 + l2*m1*cos(theta3) + l2*m2*cos(theta3) + l2*m3*cos(theta3) - l2*m3*cos(2*theta1 + 2*theta2 + theta3) - lc2*m2*cos(2*theta1 + 2*theta2 + theta3) - lc3*m3*cos(2*theta1 + 2*theta2 + 2*theta3) - l1*m2*cos(2*theta1 + theta2 + theta3) - l1*m3*cos(2*theta1 + theta2 + theta3) - lc1*m1*cos(2*theta1 + theta2 + theta3) + l1*m1*cos(theta2 + theta3) + l1*m2*cos(theta2 + theta3) + l1*m3*cos(theta2 + theta3)))/((l1*m1*sin(theta1) + 2*l1*m2*sin(theta1) + 2*l1*m3*sin(theta1) + lc1*m1*sin(theta1) + l3*m1*sin(theta1 + theta2 + theta3) + l3*m2*sin(theta1 + theta2 + theta3) + l3*m3*sin(theta1 + theta2 + theta3) + lc3*m3*sin(theta1 + theta2 + theta3) + l2*m1*sin(theta1 + theta2) + l2*m2*sin(theta1 + theta2) + 2*l2*m3*sin(theta1 + theta2) + lc2*m2*sin(theta1 + theta2))^2 + (l1*m1*cos(theta1) - lc1*m1*cos(theta1) + l3*m1*cos(theta1 + theta2 + theta3) + l3*m2*cos(theta1 + theta2 + theta3) + l3*m3*cos(theta1 + theta2 + theta3) - lc3*m3*cos(theta1 + theta2 + theta3) + l2*m1*cos(theta1 + theta2) + l2*m2*cos(theta1 + theta2) - lc2*m2*cos(theta1 + theta2))^2)^(1/2))
theta_com_base_test = eval(subs(theta_com_base, [theta1 theta2 theta3 m1 m2 m3 lc1 lc2 lc3 l1 l2 l3], [0.1 0 0 5.9117 4.2554 10.19329 0.15149 0.24517 0.1585 0.3715 0.49478 0.32662]))

% Jw = [T(1)
% th = [-pi/2:0.02:pi/2];
% theta_com_base_test = zeros(3, length(th));
% p_0_com_test = zeros(3, length(th));
% for i = 1:length(th)
%     theta_com_base_test(1, i) = eval(subs(theta_com_base, [theta1 theta2 theta3 m1 m2 m3 lc1 lc2 lc3 l1 l2 l3], [th(i) 0 0 5.9117 4.2554 10.19329 0.15149 0.24517 0.1585 0.3715 0.49478 0.32662]));
%     % if abs(theta_com_base_test(1, i)) > 2*pi-abs(theta_com_base_test(1, i))
%     %     theta_com_base_test(1, i) = -2*pi+abs(theta_com_base_test(1, i));
%     % end
%     theta_com_base_test(2, i) = eval(subs(theta_com_base, [theta1 theta2 theta3 m1 m2 m3 lc1 lc2 lc3 l1 l2 l3], [0 th(i) 0 5.9117 4.2554 10.19329 0.15149 0.24517 0.1585 0.3715 0.49478 0.32662]));
%     % if abs(theta_com_base_test(2, i)) > 2*pi-abs(theta_com_base_test(2, i))
%     %     theta_com_base_test(2, i) = -2*pi+abs(theta_com_base_test(2, i));
%     % end
%     theta_com_base_test(3, i) = eval(subs(theta_com_base, [theta1 theta2 theta3 m1 m2 m3 lc1 lc2 lc3 l1 l2 l3], [0 0 th(i) 5.9117 4.2554 10.19329 0.15149 0.24517 0.1585 0.3715 0.49478 0.32662]));
%     % if abs(theta_com_base_test(3, i)) > 2*pi-abs(theta_com_base_test(3, i))
%     %     theta_com_base_test(3, i) = -2*pi+abs(theta_com_base_test(3, i));
%     % end
%         %     p_0_com_test(:, i) = eval(subs(p_0_com, [theta1 theta2 theta3 m1 m2 m3 lc1 lc2 lc3 l1 l2 l3], [th(i) 0 0 5.9117 4.2554 10.19329 0.15149 0.24517 0.1585 0.3715 0.49478 0.32662]));
% end
% 
% plot(rad2deg(th), (rad2deg(theta_com_base_test)));
% figure
% plot(rad2deg(th), (rad2deg(unwrap(theta_com_base_test, [], 2))));




% plot(th, p_0_com_test(1:2, :));