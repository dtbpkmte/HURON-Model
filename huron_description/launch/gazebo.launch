<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find huron_description)/worlds/multiview.world"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find huron_description)/urdf/huron.xacro'" />

  <!-- Node start delay -->
  <arg name="node_start_delay" default="2.0" />

  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
    
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-urdf -model huron_description -z 1.1227 -param robot_description"
    output="screen" />

 <!-- <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" /> -->

 <?comment
  <node name="foot_ft_plotter" pkg="rqt_gui" type="rqt_gui" output="screen" respawn = "false"
    args="--perspective-file $(find huron_description)/config/foot_ft.perspective"/>
    ?>

    <!-- Control -->
  <rosparam file="$(find huron_control)/config/controller.yaml" command="load"/>

  <!-- Normal individual controllers -->
  <?comment
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/huron" args="l_hip_yaw_effort l_hip_roll_effort l_hip_pitch_effort  l_knee_pitch_effort l_ankle_pitch_effort l_ankle_roll_effort r_hip_yaw_effort r_hip_roll_effort r_hip_pitch_effort r_knee_pitch_effort r_ankle_pitch_effort r_ankle_roll_effort joint_state_controller"
    launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>
    ?>

    <!-- Group controller -->
  <node name="group_controller_spawner" pkg="controller_manager"
    type="spawner" respawn="false" output="screen" ns="/huron"
    args="joint_state_controller joint_group_effort_controller"
    launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/huron/joint_states" />
  </node>

  <!-- Call camera service -->
  <node pkg="rosservice" type="rosservice" name="multiview_camera" args="call --wait /gazebo/start_recording &quot;{cameras: {names: [&apos;&apos;, camera_1, camera_2, camera_3]}}&quot;" />
</launch>
